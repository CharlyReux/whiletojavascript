/*
 * generated by Xtext 2.25.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package paramInterpreter.inter.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package paramInterpreter.inter.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import paramInterpreter.inter.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getEqListeAssignment()); }
		(rule__Model__EqListeAssignment)*
		{ after(grammarAccess.getModelAccess().getEqListeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqual
entryRuleEqual
:
{ before(grammarAccess.getEqualRule()); }
	 ruleEqual
{ after(grammarAccess.getEqualRule()); } 
	 EOF 
;

// Rule Equal
ruleEqual 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualAccess().getGroup()); }
		(rule__Equal__Group__0)
		{ after(grammarAccess.getEqualAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVars
entryRuleVars
:
{ before(grammarAccess.getVarsRule()); }
	 ruleVars
{ after(grammarAccess.getVarsRule()); } 
	 EOF 
;

// Rule Vars
ruleVars 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarsAccess().getLvarsAssignment()); }
		(rule__Vars__LvarsAssignment)
		{ after(grammarAccess.getVarsAccess().getLvarsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprs
entryRuleExprs
:
{ before(grammarAccess.getExprsRule()); }
	 ruleExprs
{ after(grammarAccess.getExprsRule()); } 
	 EOF 
;

// Rule Exprs
ruleExprs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprsAccess().getLexprAssignment()); }
		(rule__Exprs__LexprAssignment)
		{ after(grammarAccess.getExprsAccess().getLexprAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup()); }
		(rule__Expression__Group__0)
		{ after(grammarAccess.getExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprBase
entryRuleExprBase
:
{ before(grammarAccess.getExprBaseRule()); }
	 ruleExprBase
{ after(grammarAccess.getExprBaseRule()); } 
	 EOF 
;

// Rule ExprBase
ruleExprBase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprBaseAccess().getAlternatives()); }
		(rule__ExprBase__Alternatives)
		{ after(grammarAccess.getExprBaseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEBsy
entryRuleEBsy
:
{ before(grammarAccess.getEBsyRule()); }
	 ruleEBsy
{ after(grammarAccess.getEBsyRule()); } 
	 EOF 
;

// Rule EBsy
ruleEBsy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEBsyAccess().getGroup()); }
		(rule__EBsy__Group__0)
		{ after(grammarAccess.getEBsyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEBhd
entryRuleEBhd
:
{ before(grammarAccess.getEBhdRule()); }
	 ruleEBhd
{ after(grammarAccess.getEBhdRule()); } 
	 EOF 
;

// Rule EBhd
ruleEBhd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEBhdAccess().getGroup()); }
		(rule__EBhd__Group__0)
		{ after(grammarAccess.getEBhdAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEBtl
entryRuleEBtl
:
{ before(grammarAccess.getEBtlRule()); }
	 ruleEBtl
{ after(grammarAccess.getEBtlRule()); } 
	 EOF 
;

// Rule EBtl
ruleEBtl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEBtlAccess().getGroup()); }
		(rule__EBtl__Group__0)
		{ after(grammarAccess.getEBtlAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEBcons
entryRuleEBcons
:
{ before(grammarAccess.getEBconsRule()); }
	 ruleEBcons
{ after(grammarAccess.getEBconsRule()); } 
	 EOF 
;

// Rule EBcons
ruleEBcons 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEBconsAccess().getGroup()); }
		(rule__EBcons__Group__0)
		{ after(grammarAccess.getEBconsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEBlist
entryRuleEBlist
:
{ before(grammarAccess.getEBlistRule()); }
	 ruleEBlist
{ after(grammarAccess.getEBlistRule()); } 
	 EOF 
;

// Rule EBlist
ruleEBlist 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEBlistAccess().getGroup()); }
		(rule__EBlist__Group__0)
		{ after(grammarAccess.getEBlistAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getGroup_0()); }
		(rule__ExprBase__Group_0__0)
		{ after(grammarAccess.getExprBaseAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getExprBaseAccess().getVAssignment_1()); }
		(rule__ExprBase__VAssignment_1)
		{ after(grammarAccess.getExprBaseAccess().getVAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getExprBaseAccess().getSyAssignment_2()); }
		(rule__ExprBase__SyAssignment_2)
		{ after(grammarAccess.getExprBaseAccess().getSyAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getExprBaseAccess().getEbtAssignment_3()); }
		(rule__ExprBase__EbtAssignment_3)
		{ after(grammarAccess.getExprBaseAccess().getEbtAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getExprBaseAccess().getEbhAssignment_4()); }
		(rule__ExprBase__EbhAssignment_4)
		{ after(grammarAccess.getExprBaseAccess().getEbhAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getExprBaseAccess().getEbcAssignment_5()); }
		(rule__ExprBase__EbcAssignment_5)
		{ after(grammarAccess.getExprBaseAccess().getEbcAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getExprBaseAccess().getEblAssignment_6()); }
		(rule__ExprBase__EblAssignment_6)
		{ after(grammarAccess.getExprBaseAccess().getEblAssignment_6()); }
	)
	|
	(
		{ before(grammarAccess.getExprBaseAccess().getEbsAssignment_7()); }
		(rule__ExprBase__EbsAssignment_7)
		{ after(grammarAccess.getExprBaseAccess().getEbsAssignment_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equal__Group__0__Impl
	rule__Equal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualAccess().getVarsAssignment_0()); }
	(rule__Equal__VarsAssignment_0)
	{ after(grammarAccess.getEqualAccess().getVarsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equal__Group__1__Impl
	rule__Equal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualAccess().getColonEqualsSignKeyword_1()); }
	':='
	{ after(grammarAccess.getEqualAccess().getColonEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equal__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualAccess().getExpAssignment_2()); }
	(rule__Equal__ExpAssignment_2)
	{ after(grammarAccess.getEqualAccess().getExpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getExpbgAssignment_0()); }
	(rule__Expression__ExpbgAssignment_0)
	{ after(grammarAccess.getExpressionAccess().getExpbgAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
	(rule__Expression__Group_1__0)?
	{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getEqualsSignQuestionMarkKeyword_1_0()); }
	'=?'
	{ after(grammarAccess.getExpressionAccess().getEqualsSignQuestionMarkKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getExpbdAssignment_1_1()); }
	(rule__Expression__ExpbdAssignment_1_1)
	{ after(grammarAccess.getExpressionAccess().getExpbdAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprBase__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprBase__Group_0__0__Impl
	rule__ExprBase__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprBaseAccess().getExprBaseAction_0_0()); }
	()
	{ after(grammarAccess.getExprBaseAccess().getExprBaseAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprBase__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprBaseAccess().getNiAssignment_0_1()); }
	(rule__ExprBase__NiAssignment_0_1)
	{ after(grammarAccess.getExprBaseAccess().getNiAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EBsy__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBsy__Group__0__Impl
	rule__EBsy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EBsy__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBsyAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getEBsyAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBsy__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBsy__Group__1__Impl
	rule__EBsy__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EBsy__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBsyAccess().getSyAssignment_1()); }
	(rule__EBsy__SyAssignment_1)
	{ after(grammarAccess.getEBsyAccess().getSyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBsy__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBsy__Group__2__Impl
	rule__EBsy__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EBsy__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBsyAccess().getLexpbAssignment_2()); }
	(rule__EBsy__LexpbAssignment_2)*
	{ after(grammarAccess.getEBsyAccess().getLexpbAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBsy__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBsy__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EBsy__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBsyAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getEBsyAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EBhd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBhd__Group__0__Impl
	rule__EBhd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EBhd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBhdAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getEBhdAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBhd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBhd__Group__1__Impl
	rule__EBhd__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EBhd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBhdAccess().getHdKeyword_1()); }
	'hd'
	{ after(grammarAccess.getEBhdAccess().getHdKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBhd__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBhd__Group__2__Impl
	rule__EBhd__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EBhd__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBhdAccess().getExpbAssignment_2()); }
	(rule__EBhd__ExpbAssignment_2)
	{ after(grammarAccess.getEBhdAccess().getExpbAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBhd__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBhd__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EBhd__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBhdAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getEBhdAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EBtl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBtl__Group__0__Impl
	rule__EBtl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EBtl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBtlAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getEBtlAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBtl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBtl__Group__1__Impl
	rule__EBtl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EBtl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBtlAccess().getTlKeyword_1()); }
	'tl'
	{ after(grammarAccess.getEBtlAccess().getTlKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBtl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBtl__Group__2__Impl
	rule__EBtl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EBtl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBtlAccess().getExpbAssignment_2()); }
	(rule__EBtl__ExpbAssignment_2)
	{ after(grammarAccess.getEBtlAccess().getExpbAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBtl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBtl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EBtl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBtlAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getEBtlAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EBcons__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBcons__Group__0__Impl
	rule__EBcons__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EBcons__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBconsAccess().getEBconsAction_0()); }
	()
	{ after(grammarAccess.getEBconsAccess().getEBconsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBcons__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBcons__Group__1__Impl
	rule__EBcons__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EBcons__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBconsAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getEBconsAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBcons__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBcons__Group__2__Impl
	rule__EBcons__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EBcons__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBconsAccess().getConsKeyword_2()); }
	'cons'
	{ after(grammarAccess.getEBconsAccess().getConsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBcons__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBcons__Group__3__Impl
	rule__EBcons__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EBcons__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBconsAccess().getLexpbAssignment_3()); }
	(rule__EBcons__LexpbAssignment_3)*
	{ after(grammarAccess.getEBconsAccess().getLexpbAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBcons__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBcons__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EBcons__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBconsAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getEBconsAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EBlist__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBlist__Group__0__Impl
	rule__EBlist__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EBlist__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBlistAccess().getEBlistAction_0()); }
	()
	{ after(grammarAccess.getEBlistAccess().getEBlistAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBlist__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBlist__Group__1__Impl
	rule__EBlist__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EBlist__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBlistAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getEBlistAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBlist__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBlist__Group__2__Impl
	rule__EBlist__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EBlist__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBlistAccess().getListKeyword_2()); }
	'list'
	{ after(grammarAccess.getEBlistAccess().getListKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBlist__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBlist__Group__3__Impl
	rule__EBlist__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EBlist__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBlistAccess().getLexpbAssignment_3()); }
	(rule__EBlist__LexpbAssignment_3)*
	{ after(grammarAccess.getEBlistAccess().getLexpbAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBlist__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBlist__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EBlist__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBlistAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getEBlistAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__EqListeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getEqListeEqualParserRuleCall_0()); }
		ruleEqual
		{ after(grammarAccess.getModelAccess().getEqListeEqualParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__VarsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualAccess().getVarsVarsParserRuleCall_0_0()); }
		ruleVars
		{ after(grammarAccess.getEqualAccess().getVarsVarsParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__ExpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualAccess().getExpExprsParserRuleCall_2_0()); }
		ruleExprs
		{ after(grammarAccess.getEqualAccess().getExpExprsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__LvarsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarsAccess().getLvarsVARIABLETerminalRuleCall_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getVarsAccess().getLvarsVARIABLETerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__LexprAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprsAccess().getLexprExpressionParserRuleCall_0()); }
		ruleExpression
		{ after(grammarAccess.getExprsAccess().getLexprExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExpbgAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getExpbgExprBaseParserRuleCall_0_0()); }
		ruleExprBase
		{ after(grammarAccess.getExpressionAccess().getExpbgExprBaseParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExpbdAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getExpbdExprBaseParserRuleCall_1_1_0()); }
		ruleExprBase
		{ after(grammarAccess.getExpressionAccess().getExpbdExprBaseParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__NiAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getNiNilKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getExprBaseAccess().getNiNilKeyword_0_1_0()); }
			'nil'
			{ after(grammarAccess.getExprBaseAccess().getNiNilKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getExprBaseAccess().getNiNilKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__VAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getVVARIABLETerminalRuleCall_1_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getExprBaseAccess().getVVARIABLETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__SyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getSySYMBOLTerminalRuleCall_2_0()); }
		RULE_SYMBOL
		{ after(grammarAccess.getExprBaseAccess().getSySYMBOLTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__EbtAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getEbtEBtlParserRuleCall_3_0()); }
		ruleEBtl
		{ after(grammarAccess.getExprBaseAccess().getEbtEBtlParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__EbhAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getEbhEBhdParserRuleCall_4_0()); }
		ruleEBhd
		{ after(grammarAccess.getExprBaseAccess().getEbhEBhdParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__EbcAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getEbcEBconsParserRuleCall_5_0()); }
		ruleEBcons
		{ after(grammarAccess.getExprBaseAccess().getEbcEBconsParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__EblAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getEblEBlistParserRuleCall_6_0()); }
		ruleEBlist
		{ after(grammarAccess.getExprBaseAccess().getEblEBlistParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__EbsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getEbsEBsyParserRuleCall_7_0()); }
		ruleEBsy
		{ after(grammarAccess.getExprBaseAccess().getEbsEBsyParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBsy__SyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEBsyAccess().getSySYMBOLTerminalRuleCall_1_0()); }
		RULE_SYMBOL
		{ after(grammarAccess.getEBsyAccess().getSySYMBOLTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBsy__LexpbAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEBsyAccess().getLexpbExprBaseParserRuleCall_2_0()); }
		ruleExprBase
		{ after(grammarAccess.getEBsyAccess().getLexpbExprBaseParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBhd__ExpbAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEBhdAccess().getExpbExprBaseParserRuleCall_2_0()); }
		ruleExprBase
		{ after(grammarAccess.getEBhdAccess().getExpbExprBaseParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBtl__ExpbAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEBtlAccess().getExpbExprBaseParserRuleCall_2_0()); }
		ruleExprBase
		{ after(grammarAccess.getEBtlAccess().getExpbExprBaseParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBcons__LexpbAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEBconsAccess().getLexpbExprBaseParserRuleCall_3_0()); }
		ruleExprBase
		{ after(grammarAccess.getEBconsAccess().getLexpbExprBaseParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBlist__LexpbAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEBlistAccess().getLexpbExprBaseParserRuleCall_3_0()); }
		ruleExprBase
		{ after(grammarAccess.getEBlistAccess().getLexpbExprBaseParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_SYMBOL : 'a'..'z' ('a'..'z'|'A'..'Z'|'0'..'9')* ('!'|'?')?;

RULE_VARIABLE : 'A'..'Z' ('a'..'z'|'A'..'Z'|'0'..'9')* ('!'|'?')?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
