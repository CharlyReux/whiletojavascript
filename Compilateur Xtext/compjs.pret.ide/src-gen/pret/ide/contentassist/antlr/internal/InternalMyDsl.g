/*
 * generated by Xtext 2.25.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package pret.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package pret.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import pret.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getModelAccess().getFuncAssignment()); }
			(rule__Model__FuncAssignment)
			{ after(grammarAccess.getModelAccess().getFuncAssignment()); }
		)
		(
			{ before(grammarAccess.getModelAccess().getFuncAssignment()); }
			(rule__Model__FuncAssignment)*
			{ after(grammarAccess.getModelAccess().getFuncAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getGroup()); }
		(rule__Function__Group__0)
		{ after(grammarAccess.getFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefinition
entryRuleDefinition
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruleDefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule Definition
ruleDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinitionAccess().getGroup()); }
		(rule__Definition__Group__0)
		{ after(grammarAccess.getDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInput
entryRuleInput
:
{ before(grammarAccess.getInputRule()); }
	 ruleInput
{ after(grammarAccess.getInputRule()); } 
	 EOF 
;

// Rule Input
ruleInput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputAccess().getGroup()); }
		(rule__Input__Group__0)
		{ after(grammarAccess.getInputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutput
entryRuleOutput
:
{ before(grammarAccess.getOutputRule()); }
	 ruleOutput
{ after(grammarAccess.getOutputRule()); } 
	 EOF 
;

// Rule Output
ruleOutput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputAccess().getGroup()); }
		(rule__Output__Group__0)
		{ after(grammarAccess.getOutputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommands
entryRuleCommands
:
{ before(grammarAccess.getCommandsRule()); }
	 ruleCommands
{ after(grammarAccess.getCommandsRule()); } 
	 EOF 
;

// Rule Commands
ruleCommands 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandsAccess().getGroup()); }
		(rule__Commands__Group__0)
		{ after(grammarAccess.getCommandsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommand
entryRuleCommand
:
{ before(grammarAccess.getCommandRule()); }
	 ruleCommand
{ after(grammarAccess.getCommandRule()); } 
	 EOF 
;

// Rule Command
ruleCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandAccess().getAlternatives()); }
		(rule__Command__Alternatives)
		{ after(grammarAccess.getCommandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqual
entryRuleEqual
:
{ before(grammarAccess.getEqualRule()); }
	 ruleEqual
{ after(grammarAccess.getEqualRule()); } 
	 EOF 
;

// Rule Equal
ruleEqual 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualAccess().getGroup()); }
		(rule__Equal__Group__0)
		{ after(grammarAccess.getEqualAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIf
entryRuleIf
:
{ before(grammarAccess.getIfRule()); }
	 ruleIf
{ after(grammarAccess.getIfRule()); } 
	 EOF 
;

// Rule If
ruleIf 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfAccess().getGroup()); }
		(rule__If__Group__0)
		{ after(grammarAccess.getIfAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhile
entryRuleWhile
:
{ before(grammarAccess.getWhileRule()); }
	 ruleWhile
{ after(grammarAccess.getWhileRule()); } 
	 EOF 
;

// Rule While
ruleWhile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileAccess().getGroup()); }
		(rule__While__Group__0)
		{ after(grammarAccess.getWhileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFor
entryRuleFor
:
{ before(grammarAccess.getForRule()); }
	 ruleFor
{ after(grammarAccess.getForRule()); } 
	 EOF 
;

// Rule For
ruleFor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForAccess().getGroup()); }
		(rule__For__Group__0)
		{ after(grammarAccess.getForAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForeach
entryRuleForeach
:
{ before(grammarAccess.getForeachRule()); }
	 ruleForeach
{ after(grammarAccess.getForeachRule()); } 
	 EOF 
;

// Rule Foreach
ruleForeach 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForeachAccess().getGroup()); }
		(rule__Foreach__Group__0)
		{ after(grammarAccess.getForeachAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVars
entryRuleVars
:
{ before(grammarAccess.getVarsRule()); }
	 ruleVars
{ after(grammarAccess.getVarsRule()); } 
	 EOF 
;

// Rule Vars
ruleVars 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarsAccess().getGroup()); }
		(rule__Vars__Group__0)
		{ after(grammarAccess.getVarsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprs
entryRuleExprs
:
{ before(grammarAccess.getExprsRule()); }
	 ruleExprs
{ after(grammarAccess.getExprsRule()); } 
	 EOF 
;

// Rule Exprs
ruleExprs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprsAccess().getGroup()); }
		(rule__Exprs__Group__0)
		{ after(grammarAccess.getExprsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup()); }
		(rule__Expression__Group__0)
		{ after(grammarAccess.getExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprBase
entryRuleExprBase
:
{ before(grammarAccess.getExprBaseRule()); }
	 ruleExprBase
{ after(grammarAccess.getExprBaseRule()); } 
	 EOF 
;

// Rule ExprBase
ruleExprBase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprBaseAccess().getAlternatives()); }
		(rule__ExprBase__Alternatives)
		{ after(grammarAccess.getExprBaseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEBsy
entryRuleEBsy
:
{ before(grammarAccess.getEBsyRule()); }
	 ruleEBsy
{ after(grammarAccess.getEBsyRule()); } 
	 EOF 
;

// Rule EBsy
ruleEBsy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEBsyAccess().getGroup()); }
		(rule__EBsy__Group__0)
		{ after(grammarAccess.getEBsyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEBhd
entryRuleEBhd
:
{ before(grammarAccess.getEBhdRule()); }
	 ruleEBhd
{ after(grammarAccess.getEBhdRule()); } 
	 EOF 
;

// Rule EBhd
ruleEBhd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEBhdAccess().getGroup()); }
		(rule__EBhd__Group__0)
		{ after(grammarAccess.getEBhdAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEBtl
entryRuleEBtl
:
{ before(grammarAccess.getEBtlRule()); }
	 ruleEBtl
{ after(grammarAccess.getEBtlRule()); } 
	 EOF 
;

// Rule EBtl
ruleEBtl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEBtlAccess().getGroup()); }
		(rule__EBtl__Group__0)
		{ after(grammarAccess.getEBtlAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEBcons
entryRuleEBcons
:
{ before(grammarAccess.getEBconsRule()); }
	 ruleEBcons
{ after(grammarAccess.getEBconsRule()); } 
	 EOF 
;

// Rule EBcons
ruleEBcons 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEBconsAccess().getGroup()); }
		(rule__EBcons__Group__0)
		{ after(grammarAccess.getEBconsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEBlist
entryRuleEBlist
:
{ before(grammarAccess.getEBlistRule()); }
	 ruleEBlist
{ after(grammarAccess.getEBlistRule()); } 
	 EOF 
;

// Rule EBlist
ruleEBlist 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEBlistAccess().getGroup()); }
		(rule__EBlist__Group__0)
		{ after(grammarAccess.getEBlistAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getEqAssignment_0()); }
		(rule__Command__EqAssignment_0)
		{ after(grammarAccess.getCommandAccess().getEqAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getNoAssignment_1()); }
		(rule__Command__NoAssignment_1)
		{ after(grammarAccess.getCommandAccess().getNoAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getIfAssignment_2()); }
		(rule__Command__IfAssignment_2)
		{ after(grammarAccess.getCommandAccess().getIfAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getWhAssignment_3()); }
		(rule__Command__WhAssignment_3)
		{ after(grammarAccess.getCommandAccess().getWhAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getFoAssignment_4()); }
		(rule__Command__FoAssignment_4)
		{ after(grammarAccess.getCommandAccess().getFoAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getForeAssignment_5()); }
		(rule__Command__ForeAssignment_5)
		{ after(grammarAccess.getCommandAccess().getForeAssignment_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getGroup_0()); }
		(rule__ExprBase__Group_0__0)
		{ after(grammarAccess.getExprBaseAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getExprBaseAccess().getVAssignment_1()); }
		(rule__ExprBase__VAssignment_1)
		{ after(grammarAccess.getExprBaseAccess().getVAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getExprBaseAccess().getSyAssignment_2()); }
		(rule__ExprBase__SyAssignment_2)
		{ after(grammarAccess.getExprBaseAccess().getSyAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getExprBaseAccess().getEbtAssignment_3()); }
		(rule__ExprBase__EbtAssignment_3)
		{ after(grammarAccess.getExprBaseAccess().getEbtAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getExprBaseAccess().getEbhAssignment_4()); }
		(rule__ExprBase__EbhAssignment_4)
		{ after(grammarAccess.getExprBaseAccess().getEbhAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getExprBaseAccess().getEbcAssignment_5()); }
		(rule__ExprBase__EbcAssignment_5)
		{ after(grammarAccess.getExprBaseAccess().getEbcAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getExprBaseAccess().getEblAssignment_6()); }
		(rule__ExprBase__EblAssignment_6)
		{ after(grammarAccess.getExprBaseAccess().getEblAssignment_6()); }
	)
	|
	(
		{ before(grammarAccess.getExprBaseAccess().getEbsAssignment_7()); }
		(rule__ExprBase__EbsAssignment_7)
		{ after(grammarAccess.getExprBaseAccess().getEbsAssignment_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
	'function'
	{ after(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFnameAssignment_1()); }
	(rule__Function__FnameAssignment_1)
	{ after(grammarAccess.getFunctionAccess().getFnameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getFunctionAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFdefAssignment_3()); }
	(rule__Function__FdefAssignment_3)
	{ after(grammarAccess.getFunctionAccess().getFdefAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__0__Impl
	rule__Definition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getReadKeyword_0()); }
	'read'
	{ after(grammarAccess.getDefinitionAccess().getReadKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__1__Impl
	rule__Definition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getDefInputAssignment_1()); }
	(rule__Definition__DefInputAssignment_1)
	{ after(grammarAccess.getDefinitionAccess().getDefInputAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__2__Impl
	rule__Definition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getRCHARIOTTerminalRuleCall_2()); }
	(RULE_RCHARIOT)*
	{ after(grammarAccess.getDefinitionAccess().getRCHARIOTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__3__Impl
	rule__Definition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getPercentSignKeyword_3()); }
	'%'
	{ after(grammarAccess.getDefinitionAccess().getPercentSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__4__Impl
	rule__Definition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getRCHARIOTTerminalRuleCall_4()); }
	(RULE_RCHARIOT)*
	{ after(grammarAccess.getDefinitionAccess().getRCHARIOTTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__5__Impl
	rule__Definition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getDefCommandsAssignment_5()); }
	(rule__Definition__DefCommandsAssignment_5)
	{ after(grammarAccess.getDefinitionAccess().getDefCommandsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__6__Impl
	rule__Definition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getRCHARIOTTerminalRuleCall_6()); }
	(RULE_RCHARIOT)*
	{ after(grammarAccess.getDefinitionAccess().getRCHARIOTTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__7__Impl
	rule__Definition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getPercentSignKeyword_7()); }
	'%'
	{ after(grammarAccess.getDefinitionAccess().getPercentSignKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__8__Impl
	rule__Definition__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getWriteKeyword_8()); }
	'write'
	{ after(grammarAccess.getDefinitionAccess().getWriteKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getDefOutputAssignment_9()); }
	(rule__Definition__DefOutputAssignment_9)
	{ after(grammarAccess.getDefinitionAccess().getDefOutputAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__0__Impl
	rule__Input__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getVaiAssignment_0()); }
	(rule__Input__VaiAssignment_0)
	{ after(grammarAccess.getInputAccess().getVaiAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getGroup_1()); }
	(rule__Input__Group_1__0)*
	{ after(grammarAccess.getInputAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group_1__0__Impl
	rule__Input__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getInputAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getVaiAssignment_1_1()); }
	(rule__Input__VaiAssignment_1_1)
	{ after(grammarAccess.getInputAccess().getVaiAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__0__Impl
	rule__Output__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getVaoAssignment_0()); }
	(rule__Output__VaoAssignment_0)
	{ after(grammarAccess.getOutputAccess().getVaoAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getGroup_1()); }
	(rule__Output__Group_1__0)*
	{ after(grammarAccess.getOutputAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group_1__0__Impl
	rule__Output__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getOutputAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getVaoAssignment_1_1()); }
	(rule__Output__VaoAssignment_1_1)
	{ after(grammarAccess.getOutputAccess().getVaoAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Commands__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commands__Group__0__Impl
	rule__Commands__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandsAccess().getLCommandAssignment_0()); }
	(rule__Commands__LCommandAssignment_0)
	{ after(grammarAccess.getCommandsAccess().getLCommandAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commands__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandsAccess().getGroup_1()); }
	(rule__Commands__Group_1__0)*
	{ after(grammarAccess.getCommandsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Commands__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commands__Group_1__0__Impl
	rule__Commands__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandsAccess().getSemicolonKeyword_1_0()); }
	';'
	{ after(grammarAccess.getCommandsAccess().getSemicolonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commands__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandsAccess().getLCommandAssignment_1_1()); }
	(rule__Commands__LCommandAssignment_1_1)
	{ after(grammarAccess.getCommandsAccess().getLCommandAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equal__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equal__Group__0__Impl
	rule__Equal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualAccess().getVarsAssignment_0()); }
	(rule__Equal__VarsAssignment_0)
	{ after(grammarAccess.getEqualAccess().getVarsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equal__Group__1__Impl
	rule__Equal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualAccess().getColonEqualsSignKeyword_1()); }
	':='
	{ after(grammarAccess.getEqualAccess().getColonEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equal__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualAccess().getExpAssignment_2()); }
	(rule__Equal__ExpAssignment_2)
	{ after(grammarAccess.getEqualAccess().getExpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__0__Impl
	rule__If__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__1__Impl
	rule__If__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getIfexpAssignment_1()); }
	(rule__If__IfexpAssignment_1)
	{ after(grammarAccess.getIfAccess().getIfexpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__2__Impl
	rule__If__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getIfAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__3__Impl
	rule__If__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getRCHARIOTTerminalRuleCall_3()); }
	(RULE_RCHARIOT)*
	{ after(grammarAccess.getIfAccess().getRCHARIOTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__4__Impl
	rule__If__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getIflcAssignment_4()); }
	(rule__If__IflcAssignment_4)
	{ after(grammarAccess.getIfAccess().getIflcAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__5__Impl
	rule__If__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getGroup_5()); }
	(rule__If__Group_5__0)?
	{ after(grammarAccess.getIfAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__6__Impl
	rule__If__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getRCHARIOTTerminalRuleCall_6()); }
	(RULE_RCHARIOT)*
	{ after(grammarAccess.getIfAccess().getRCHARIOTTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getFiKeyword_7()); }
	'fi'
	{ after(grammarAccess.getIfAccess().getFiKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group_5__0__Impl
	rule__If__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getRCHARIOTTerminalRuleCall_5_0()); }
	(RULE_RCHARIOT)*
	{ after(grammarAccess.getIfAccess().getRCHARIOTTerminalRuleCall_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group_5__1__Impl
	rule__If__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getElseKeyword_5_1()); }
	'else'
	{ after(grammarAccess.getIfAccess().getElseKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getEllcAssignment_5_2()); }
	(rule__If__EllcAssignment_5_2)
	{ after(grammarAccess.getIfAccess().getEllcAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__0__Impl
	rule__While__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getWhileKeyword_0()); }
	'while'
	{ after(grammarAccess.getWhileAccess().getWhileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__1__Impl
	rule__While__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getWhexpAssignment_1()); }
	(rule__While__WhexpAssignment_1)
	{ after(grammarAccess.getWhileAccess().getWhexpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__2__Impl
	rule__While__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getDoKeyword_2()); }
	'do'
	{ after(grammarAccess.getWhileAccess().getDoKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__3__Impl
	rule__While__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getRCHARIOTTerminalRuleCall_3()); }
	(RULE_RCHARIOT)*
	{ after(grammarAccess.getWhileAccess().getRCHARIOTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__4__Impl
	rule__While__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getWhcomAssignment_4()); }
	(rule__While__WhcomAssignment_4)
	{ after(grammarAccess.getWhileAccess().getWhcomAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__5__Impl
	rule__While__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getRCHARIOTTerminalRuleCall_5()); }
	(RULE_RCHARIOT)*
	{ after(grammarAccess.getWhileAccess().getRCHARIOTTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getOdKeyword_6()); }
	'od'
	{ after(grammarAccess.getWhileAccess().getOdKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__0__Impl
	rule__For__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getForKeyword_0()); }
	'for'
	{ after(grammarAccess.getForAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__1__Impl
	rule__For__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getFoexpAssignment_1()); }
	(rule__For__FoexpAssignment_1)
	{ after(grammarAccess.getForAccess().getFoexpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__2__Impl
	rule__For__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getDoKeyword_2()); }
	'do'
	{ after(grammarAccess.getForAccess().getDoKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__3__Impl
	rule__For__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getRCHARIOTTerminalRuleCall_3()); }
	(RULE_RCHARIOT)*
	{ after(grammarAccess.getForAccess().getRCHARIOTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__4__Impl
	rule__For__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getFocomAssignment_4()); }
	(rule__For__FocomAssignment_4)
	{ after(grammarAccess.getForAccess().getFocomAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__5__Impl
	rule__For__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getRCHARIOTTerminalRuleCall_5()); }
	(RULE_RCHARIOT)*
	{ after(grammarAccess.getForAccess().getRCHARIOTTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getOdKeyword_6()); }
	'od'
	{ after(grammarAccess.getForAccess().getOdKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Foreach__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foreach__Group__0__Impl
	rule__Foreach__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachAccess().getForeachKeyword_0()); }
	'foreach'
	{ after(grammarAccess.getForeachAccess().getForeachKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foreach__Group__1__Impl
	rule__Foreach__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachAccess().getForevarAssignment_1()); }
	(rule__Foreach__ForevarAssignment_1)
	{ after(grammarAccess.getForeachAccess().getForevarAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foreach__Group__2__Impl
	rule__Foreach__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachAccess().getInKeyword_2()); }
	'in'
	{ after(grammarAccess.getForeachAccess().getInKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foreach__Group__3__Impl
	rule__Foreach__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachAccess().getForeexpAssignment_3()); }
	(rule__Foreach__ForeexpAssignment_3)
	{ after(grammarAccess.getForeachAccess().getForeexpAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foreach__Group__4__Impl
	rule__Foreach__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachAccess().getDoKeyword_4()); }
	'do'
	{ after(grammarAccess.getForeachAccess().getDoKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foreach__Group__5__Impl
	rule__Foreach__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachAccess().getRCHARIOTTerminalRuleCall_5()); }
	(RULE_RCHARIOT)*
	{ after(grammarAccess.getForeachAccess().getRCHARIOTTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foreach__Group__6__Impl
	rule__Foreach__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachAccess().getForecomAssignment_6()); }
	(rule__Foreach__ForecomAssignment_6)
	{ after(grammarAccess.getForeachAccess().getForecomAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foreach__Group__7__Impl
	rule__Foreach__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachAccess().getRCHARIOTTerminalRuleCall_7()); }
	(RULE_RCHARIOT)*
	{ after(grammarAccess.getForeachAccess().getRCHARIOTTerminalRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foreach__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachAccess().getOdKeyword_8()); }
	'od'
	{ after(grammarAccess.getForeachAccess().getOdKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Vars__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vars__Group__0__Impl
	rule__Vars__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarsAccess().getLvarsAssignment_0()); }
	(rule__Vars__LvarsAssignment_0)
	{ after(grammarAccess.getVarsAccess().getLvarsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vars__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarsAccess().getGroup_1()); }
	(rule__Vars__Group_1__0)*
	{ after(grammarAccess.getVarsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Vars__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vars__Group_1__0__Impl
	rule__Vars__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarsAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getVarsAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vars__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarsAccess().getLvarsAssignment_1_1()); }
	(rule__Vars__LvarsAssignment_1_1)
	{ after(grammarAccess.getVarsAccess().getLvarsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exprs__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprs__Group__0__Impl
	rule__Exprs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprsAccess().getLexprAssignment_0()); }
	(rule__Exprs__LexprAssignment_0)
	{ after(grammarAccess.getExprsAccess().getLexprAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprs__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprsAccess().getGroup_1()); }
	(rule__Exprs__Group_1__0)*
	{ after(grammarAccess.getExprsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exprs__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprs__Group_1__0__Impl
	rule__Exprs__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprsAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getExprsAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprs__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprsAccess().getLexprAssignment_1_1()); }
	(rule__Exprs__LexprAssignment_1_1)
	{ after(grammarAccess.getExprsAccess().getLexprAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getExpbgAssignment_0()); }
	(rule__Expression__ExpbgAssignment_0)
	{ after(grammarAccess.getExpressionAccess().getExpbgAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
	(rule__Expression__Group_1__0)?
	{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getEqualsSignQuestionMarkKeyword_1_0()); }
	'=?'
	{ after(grammarAccess.getExpressionAccess().getEqualsSignQuestionMarkKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getExpbdAssignment_1_1()); }
	(rule__Expression__ExpbdAssignment_1_1)
	{ after(grammarAccess.getExpressionAccess().getExpbdAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprBase__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprBase__Group_0__0__Impl
	rule__ExprBase__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprBaseAccess().getExprBaseAction_0_0()); }
	()
	{ after(grammarAccess.getExprBaseAccess().getExprBaseAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprBase__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprBaseAccess().getNiAssignment_0_1()); }
	(rule__ExprBase__NiAssignment_0_1)
	{ after(grammarAccess.getExprBaseAccess().getNiAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EBsy__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBsy__Group__0__Impl
	rule__EBsy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EBsy__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBsyAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getEBsyAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBsy__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBsy__Group__1__Impl
	rule__EBsy__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EBsy__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBsyAccess().getSyAssignment_1()); }
	(rule__EBsy__SyAssignment_1)
	{ after(grammarAccess.getEBsyAccess().getSyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBsy__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBsy__Group__2__Impl
	rule__EBsy__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EBsy__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBsyAccess().getLexpbAssignment_2()); }
	(rule__EBsy__LexpbAssignment_2)*
	{ after(grammarAccess.getEBsyAccess().getLexpbAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBsy__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBsy__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EBsy__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBsyAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getEBsyAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EBhd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBhd__Group__0__Impl
	rule__EBhd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EBhd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBhdAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getEBhdAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBhd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBhd__Group__1__Impl
	rule__EBhd__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EBhd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBhdAccess().getHdKeyword_1()); }
	'hd'
	{ after(grammarAccess.getEBhdAccess().getHdKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBhd__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBhd__Group__2__Impl
	rule__EBhd__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EBhd__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBhdAccess().getExpbAssignment_2()); }
	(rule__EBhd__ExpbAssignment_2)
	{ after(grammarAccess.getEBhdAccess().getExpbAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBhd__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBhd__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EBhd__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBhdAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getEBhdAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EBtl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBtl__Group__0__Impl
	rule__EBtl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EBtl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBtlAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getEBtlAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBtl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBtl__Group__1__Impl
	rule__EBtl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EBtl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBtlAccess().getTlKeyword_1()); }
	'tl'
	{ after(grammarAccess.getEBtlAccess().getTlKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBtl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBtl__Group__2__Impl
	rule__EBtl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EBtl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBtlAccess().getExpbAssignment_2()); }
	(rule__EBtl__ExpbAssignment_2)
	{ after(grammarAccess.getEBtlAccess().getExpbAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBtl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBtl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EBtl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBtlAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getEBtlAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EBcons__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBcons__Group__0__Impl
	rule__EBcons__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EBcons__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBconsAccess().getEBconsAction_0()); }
	()
	{ after(grammarAccess.getEBconsAccess().getEBconsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBcons__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBcons__Group__1__Impl
	rule__EBcons__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EBcons__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBconsAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getEBconsAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBcons__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBcons__Group__2__Impl
	rule__EBcons__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EBcons__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBconsAccess().getConsKeyword_2()); }
	'cons'
	{ after(grammarAccess.getEBconsAccess().getConsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBcons__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBcons__Group__3__Impl
	rule__EBcons__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EBcons__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBconsAccess().getLexpbAssignment_3()); }
	(rule__EBcons__LexpbAssignment_3)*
	{ after(grammarAccess.getEBconsAccess().getLexpbAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBcons__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBcons__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EBcons__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBconsAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getEBconsAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EBlist__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBlist__Group__0__Impl
	rule__EBlist__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EBlist__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBlistAccess().getEBlistAction_0()); }
	()
	{ after(grammarAccess.getEBlistAccess().getEBlistAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBlist__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBlist__Group__1__Impl
	rule__EBlist__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EBlist__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBlistAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getEBlistAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBlist__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBlist__Group__2__Impl
	rule__EBlist__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EBlist__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBlistAccess().getListKeyword_2()); }
	'list'
	{ after(grammarAccess.getEBlistAccess().getListKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBlist__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBlist__Group__3__Impl
	rule__EBlist__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EBlist__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBlistAccess().getLexpbAssignment_3()); }
	(rule__EBlist__LexpbAssignment_3)*
	{ after(grammarAccess.getEBlistAccess().getLexpbAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBlist__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBlist__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EBlist__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBlistAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getEBlistAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__FuncAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getFuncFunctionParserRuleCall_0()); }
		ruleFunction
		{ after(grammarAccess.getModelAccess().getFuncFunctionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__FnameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getFnameSYMBOLTerminalRuleCall_1_0()); }
		RULE_SYMBOL
		{ after(grammarAccess.getFunctionAccess().getFnameSYMBOLTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__FdefAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getFdefDefinitionParserRuleCall_3_0()); }
		ruleDefinition
		{ after(grammarAccess.getFunctionAccess().getFdefDefinitionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__DefInputAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getDefInputInputParserRuleCall_1_0()); }
		ruleInput
		{ after(grammarAccess.getDefinitionAccess().getDefInputInputParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__DefCommandsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getDefCommandsCommandsParserRuleCall_5_0()); }
		ruleCommands
		{ after(grammarAccess.getDefinitionAccess().getDefCommandsCommandsParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__DefOutputAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getDefOutputOutputParserRuleCall_9_0()); }
		ruleOutput
		{ after(grammarAccess.getDefinitionAccess().getDefOutputOutputParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__VaiAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getVaiVARIABLETerminalRuleCall_0_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getInputAccess().getVaiVARIABLETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__VaiAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getVaiVARIABLETerminalRuleCall_1_1_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getInputAccess().getVaiVARIABLETerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__VaoAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getVaoVARIABLETerminalRuleCall_0_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getOutputAccess().getVaoVARIABLETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__VaoAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getVaoVARIABLETerminalRuleCall_1_1_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getOutputAccess().getVaoVARIABLETerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__LCommandAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandsAccess().getLCommandCommandParserRuleCall_0_0()); }
		ruleCommand
		{ after(grammarAccess.getCommandsAccess().getLCommandCommandParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__LCommandAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandsAccess().getLCommandCommandParserRuleCall_1_1_0()); }
		ruleCommand
		{ after(grammarAccess.getCommandsAccess().getLCommandCommandParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__EqAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getEqEqualParserRuleCall_0_0()); }
		ruleEqual
		{ after(grammarAccess.getCommandAccess().getEqEqualParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__NoAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getNoNopKeyword_1_0()); }
		(
			{ before(grammarAccess.getCommandAccess().getNoNopKeyword_1_0()); }
			'nop'
			{ after(grammarAccess.getCommandAccess().getNoNopKeyword_1_0()); }
		)
		{ after(grammarAccess.getCommandAccess().getNoNopKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__IfAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getIfIfParserRuleCall_2_0()); }
		ruleIf
		{ after(grammarAccess.getCommandAccess().getIfIfParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__WhAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getWhWhileParserRuleCall_3_0()); }
		ruleWhile
		{ after(grammarAccess.getCommandAccess().getWhWhileParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__FoAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getFoForParserRuleCall_4_0()); }
		ruleFor
		{ after(grammarAccess.getCommandAccess().getFoForParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__ForeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getForeForeachParserRuleCall_5_0()); }
		ruleForeach
		{ after(grammarAccess.getCommandAccess().getForeForeachParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__VarsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualAccess().getVarsVarsParserRuleCall_0_0()); }
		ruleVars
		{ after(grammarAccess.getEqualAccess().getVarsVarsParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__ExpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualAccess().getExpExprsParserRuleCall_2_0()); }
		ruleExprs
		{ after(grammarAccess.getEqualAccess().getExpExprsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__IfexpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getIfexpExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getIfAccess().getIfexpExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__IflcAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getIflcCommandsParserRuleCall_4_0()); }
		ruleCommands
		{ after(grammarAccess.getIfAccess().getIflcCommandsParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__EllcAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getEllcCommandsParserRuleCall_5_2_0()); }
		ruleCommands
		{ after(grammarAccess.getIfAccess().getEllcCommandsParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__WhexpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileAccess().getWhexpExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getWhileAccess().getWhexpExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__WhcomAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileAccess().getWhcomCommandsParserRuleCall_4_0()); }
		ruleCommands
		{ after(grammarAccess.getWhileAccess().getWhcomCommandsParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__FoexpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForAccess().getFoexpExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getForAccess().getFoexpExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__FocomAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForAccess().getFocomCommandsParserRuleCall_4_0()); }
		ruleCommands
		{ after(grammarAccess.getForAccess().getFocomCommandsParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__ForevarAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForeachAccess().getForevarVARIABLETerminalRuleCall_1_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getForeachAccess().getForevarVARIABLETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__ForeexpAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForeachAccess().getForeexpExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getForeachAccess().getForeexpExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__ForecomAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForeachAccess().getForecomCommandsParserRuleCall_6_0()); }
		ruleCommands
		{ after(grammarAccess.getForeachAccess().getForecomCommandsParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__LvarsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarsAccess().getLvarsVARIABLETerminalRuleCall_0_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getVarsAccess().getLvarsVARIABLETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__LvarsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarsAccess().getLvarsVARIABLETerminalRuleCall_1_1_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getVarsAccess().getLvarsVARIABLETerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__LexprAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprsAccess().getLexprExpressionParserRuleCall_0_0()); }
		ruleExpression
		{ after(grammarAccess.getExprsAccess().getLexprExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__LexprAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprsAccess().getLexprExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getExprsAccess().getLexprExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExpbgAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getExpbgExprBaseParserRuleCall_0_0()); }
		ruleExprBase
		{ after(grammarAccess.getExpressionAccess().getExpbgExprBaseParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExpbdAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getExpbdExprBaseParserRuleCall_1_1_0()); }
		ruleExprBase
		{ after(grammarAccess.getExpressionAccess().getExpbdExprBaseParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__NiAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getNiNilKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getExprBaseAccess().getNiNilKeyword_0_1_0()); }
			'nil'
			{ after(grammarAccess.getExprBaseAccess().getNiNilKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getExprBaseAccess().getNiNilKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__VAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getVVARIABLETerminalRuleCall_1_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getExprBaseAccess().getVVARIABLETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__SyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getSySYMBOLTerminalRuleCall_2_0()); }
		RULE_SYMBOL
		{ after(grammarAccess.getExprBaseAccess().getSySYMBOLTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__EbtAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getEbtEBtlParserRuleCall_3_0()); }
		ruleEBtl
		{ after(grammarAccess.getExprBaseAccess().getEbtEBtlParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__EbhAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getEbhEBhdParserRuleCall_4_0()); }
		ruleEBhd
		{ after(grammarAccess.getExprBaseAccess().getEbhEBhdParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__EbcAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getEbcEBconsParserRuleCall_5_0()); }
		ruleEBcons
		{ after(grammarAccess.getExprBaseAccess().getEbcEBconsParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__EblAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getEblEBlistParserRuleCall_6_0()); }
		ruleEBlist
		{ after(grammarAccess.getExprBaseAccess().getEblEBlistParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__EbsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getEbsEBsyParserRuleCall_7_0()); }
		ruleEBsy
		{ after(grammarAccess.getExprBaseAccess().getEbsEBsyParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBsy__SyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEBsyAccess().getSySYMBOLTerminalRuleCall_1_0()); }
		RULE_SYMBOL
		{ after(grammarAccess.getEBsyAccess().getSySYMBOLTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBsy__LexpbAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEBsyAccess().getLexpbExprBaseParserRuleCall_2_0()); }
		ruleExprBase
		{ after(grammarAccess.getEBsyAccess().getLexpbExprBaseParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBhd__ExpbAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEBhdAccess().getExpbExprBaseParserRuleCall_2_0()); }
		ruleExprBase
		{ after(grammarAccess.getEBhdAccess().getExpbExprBaseParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBtl__ExpbAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEBtlAccess().getExpbExprBaseParserRuleCall_2_0()); }
		ruleExprBase
		{ after(grammarAccess.getEBtlAccess().getExpbExprBaseParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBcons__LexpbAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEBconsAccess().getLexpbExprBaseParserRuleCall_3_0()); }
		ruleExprBase
		{ after(grammarAccess.getEBconsAccess().getLexpbExprBaseParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBlist__LexpbAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEBlistAccess().getLexpbExprBaseParserRuleCall_3_0()); }
		ruleExprBase
		{ after(grammarAccess.getEBlistAccess().getLexpbExprBaseParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_SYMBOL : 'a'..'z' ('a'..'z'|'A'..'Z'|'0'..'9')* ('!'|'?')?;

RULE_VARIABLE : 'A'..'Z' ('a'..'z'|'A'..'Z'|'0'..'9')* ('!'|'?')?;

RULE_RCHARIOT : '\n';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
