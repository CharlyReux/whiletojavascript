/**
 * generated by Xtext 2.25.0
 */
package pret.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import pret.myDsl.Command;
import pret.myDsl.Equal;
import pret.myDsl.For;
import pret.myDsl.Foreach;
import pret.myDsl.If;
import pret.myDsl.MyDslPackage;
import pret.myDsl.While;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Command</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link pret.myDsl.impl.CommandImpl#getEq <em>Eq</em>}</li>
 *   <li>{@link pret.myDsl.impl.CommandImpl#getNo <em>No</em>}</li>
 *   <li>{@link pret.myDsl.impl.CommandImpl#getIf <em>If</em>}</li>
 *   <li>{@link pret.myDsl.impl.CommandImpl#getWh <em>Wh</em>}</li>
 *   <li>{@link pret.myDsl.impl.CommandImpl#getFo <em>Fo</em>}</li>
 *   <li>{@link pret.myDsl.impl.CommandImpl#getFore <em>Fore</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CommandImpl extends MinimalEObjectImpl.Container implements Command
{
  /**
   * The cached value of the '{@link #getEq() <em>Eq</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEq()
   * @generated
   * @ordered
   */
  protected Equal eq;

  /**
   * The default value of the '{@link #getNo() <em>No</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNo()
   * @generated
   * @ordered
   */
  protected static final String NO_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNo() <em>No</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNo()
   * @generated
   * @ordered
   */
  protected String no = NO_EDEFAULT;

  /**
   * The cached value of the '{@link #getIf() <em>If</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIf()
   * @generated
   * @ordered
   */
  protected If if_;

  /**
   * The cached value of the '{@link #getWh() <em>Wh</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWh()
   * @generated
   * @ordered
   */
  protected While wh;

  /**
   * The cached value of the '{@link #getFo() <em>Fo</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFo()
   * @generated
   * @ordered
   */
  protected For fo;

  /**
   * The cached value of the '{@link #getFore() <em>Fore</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFore()
   * @generated
   * @ordered
   */
  protected Foreach fore;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CommandImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.COMMAND;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Equal getEq()
  {
    return eq;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEq(Equal newEq, NotificationChain msgs)
  {
    Equal oldEq = eq;
    eq = newEq;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.COMMAND__EQ, oldEq, newEq);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEq(Equal newEq)
  {
    if (newEq != eq)
    {
      NotificationChain msgs = null;
      if (eq != null)
        msgs = ((InternalEObject)eq).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMMAND__EQ, null, msgs);
      if (newEq != null)
        msgs = ((InternalEObject)newEq).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMMAND__EQ, null, msgs);
      msgs = basicSetEq(newEq, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.COMMAND__EQ, newEq, newEq));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getNo()
  {
    return no;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNo(String newNo)
  {
    String oldNo = no;
    no = newNo;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.COMMAND__NO, oldNo, no));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public If getIf()
  {
    return if_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIf(If newIf, NotificationChain msgs)
  {
    If oldIf = if_;
    if_ = newIf;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.COMMAND__IF, oldIf, newIf);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIf(If newIf)
  {
    if (newIf != if_)
    {
      NotificationChain msgs = null;
      if (if_ != null)
        msgs = ((InternalEObject)if_).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMMAND__IF, null, msgs);
      if (newIf != null)
        msgs = ((InternalEObject)newIf).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMMAND__IF, null, msgs);
      msgs = basicSetIf(newIf, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.COMMAND__IF, newIf, newIf));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public While getWh()
  {
    return wh;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetWh(While newWh, NotificationChain msgs)
  {
    While oldWh = wh;
    wh = newWh;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.COMMAND__WH, oldWh, newWh);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWh(While newWh)
  {
    if (newWh != wh)
    {
      NotificationChain msgs = null;
      if (wh != null)
        msgs = ((InternalEObject)wh).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMMAND__WH, null, msgs);
      if (newWh != null)
        msgs = ((InternalEObject)newWh).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMMAND__WH, null, msgs);
      msgs = basicSetWh(newWh, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.COMMAND__WH, newWh, newWh));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public For getFo()
  {
    return fo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFo(For newFo, NotificationChain msgs)
  {
    For oldFo = fo;
    fo = newFo;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.COMMAND__FO, oldFo, newFo);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFo(For newFo)
  {
    if (newFo != fo)
    {
      NotificationChain msgs = null;
      if (fo != null)
        msgs = ((InternalEObject)fo).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMMAND__FO, null, msgs);
      if (newFo != null)
        msgs = ((InternalEObject)newFo).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMMAND__FO, null, msgs);
      msgs = basicSetFo(newFo, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.COMMAND__FO, newFo, newFo));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Foreach getFore()
  {
    return fore;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFore(Foreach newFore, NotificationChain msgs)
  {
    Foreach oldFore = fore;
    fore = newFore;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.COMMAND__FORE, oldFore, newFore);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFore(Foreach newFore)
  {
    if (newFore != fore)
    {
      NotificationChain msgs = null;
      if (fore != null)
        msgs = ((InternalEObject)fore).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMMAND__FORE, null, msgs);
      if (newFore != null)
        msgs = ((InternalEObject)newFore).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMMAND__FORE, null, msgs);
      msgs = basicSetFore(newFore, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.COMMAND__FORE, newFore, newFore));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.COMMAND__EQ:
        return basicSetEq(null, msgs);
      case MyDslPackage.COMMAND__IF:
        return basicSetIf(null, msgs);
      case MyDslPackage.COMMAND__WH:
        return basicSetWh(null, msgs);
      case MyDslPackage.COMMAND__FO:
        return basicSetFo(null, msgs);
      case MyDslPackage.COMMAND__FORE:
        return basicSetFore(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.COMMAND__EQ:
        return getEq();
      case MyDslPackage.COMMAND__NO:
        return getNo();
      case MyDslPackage.COMMAND__IF:
        return getIf();
      case MyDslPackage.COMMAND__WH:
        return getWh();
      case MyDslPackage.COMMAND__FO:
        return getFo();
      case MyDslPackage.COMMAND__FORE:
        return getFore();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.COMMAND__EQ:
        setEq((Equal)newValue);
        return;
      case MyDslPackage.COMMAND__NO:
        setNo((String)newValue);
        return;
      case MyDslPackage.COMMAND__IF:
        setIf((If)newValue);
        return;
      case MyDslPackage.COMMAND__WH:
        setWh((While)newValue);
        return;
      case MyDslPackage.COMMAND__FO:
        setFo((For)newValue);
        return;
      case MyDslPackage.COMMAND__FORE:
        setFore((Foreach)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.COMMAND__EQ:
        setEq((Equal)null);
        return;
      case MyDslPackage.COMMAND__NO:
        setNo(NO_EDEFAULT);
        return;
      case MyDslPackage.COMMAND__IF:
        setIf((If)null);
        return;
      case MyDslPackage.COMMAND__WH:
        setWh((While)null);
        return;
      case MyDslPackage.COMMAND__FO:
        setFo((For)null);
        return;
      case MyDslPackage.COMMAND__FORE:
        setFore((Foreach)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.COMMAND__EQ:
        return eq != null;
      case MyDslPackage.COMMAND__NO:
        return NO_EDEFAULT == null ? no != null : !NO_EDEFAULT.equals(no);
      case MyDslPackage.COMMAND__IF:
        return if_ != null;
      case MyDslPackage.COMMAND__WH:
        return wh != null;
      case MyDslPackage.COMMAND__FO:
        return fo != null;
      case MyDslPackage.COMMAND__FORE:
        return fore != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (no: ");
    result.append(no);
    result.append(')');
    return result.toString();
  }

} //CommandImpl
